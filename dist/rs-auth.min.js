!function(t){function e(e,n,o){function u(t){return e({url:r.authUrl+r.loginEndPoint,method:"POST",data:t}).then(function(e){return t.remember&&n.localStorage.setItem("authToken",e.data.token),n.sessionStorage.setItem("authToken",e.data.token),o[r.user]=e.data.user,e})}function i(){return e({url:r.authUrl+r.logoutEndPoint,method:"GET",headers:{"X-Auth-Token":n.sessionStorage.getItem("authToken")}}).then(function(){n.localStorage.clear(),n.sessionStorage.clear(),o[r.user]=null})}function a(t){return e({url:r.authUrl+r.registerEndPoint,method:"POST",data:t}).then(function(t){return n.sessionStorage.setItem("authToken",t.data.token),o[r.user]=t.data.user,t})}function s(t){return e({url:r.authUrl+r.validateEndPoint,method:"GET",headers:{"X-Auth-Token":t}}).then(function(e){return n.sessionStorage.setItem("authToken",t),o[r.user]=e.data,e})}function c(e){return t.isArray(e)||(e=[e]),this.isAuthenticated()&&-1!==e.indexOf(o[r.user].role)}function d(){return n.sessionStorage.getItem("authToken")}return{login:u,logout:i,register:a,validateToken:s,isAuthenticated:d,isAuthorized:c,isRemembered:d,getToken:d}}function n(){this.config=r,this.userRoles=u,this.setUserRoles=function(e){t.extend(u,e)},this.$get=function(t){return{login:function(e){return t.login(e)},logout:function(){return t.logout()},register:function(e){return t.register(e)},validateToken:function(e){return t.validateToken(e)},isAuthenticated:function(){return t.isAuthenticated()},isAuthorized:function(e){return t.isAuthenticated(e)},isRemembered:function(){return t.isRemembered()},getToken:function(){return t.getToken()},userRoles:u}},this.$get.$inject=["Local"]}function o(t,e,n){e[r.user]={};var o;n.isAuthenticated()?(o=n.isAuthenticated(),n.validateToken(o).then(function(){e.$broadcast(t.loginSuccess)})):n.isRemembered()&&(o=n.isRemembered(),n.validateToken(o).then(function(){e.$broadcast(t.loginSuccess)}));var u=function(t){for(var e in t)if("*"===t[e])return!0;return!1};e.$on("$stateChangeStart",function(o,r){var i={all:"*"};r.data&&r.data.authorizedRoles&&(i=r.data.authorizedRoles),u(i)||n.isAuthorized(i)||(o.preventDefault(),e.$broadcast(n.isAuthenticated()?t.notAuthorized:t.notAuthenticated))})}t.module("rs-auth",[]).factory("Local",e).provider("$rsAuth",n).run(o).constant("AUTH_EVENTS",i);var r={authUrl:"",loginEndPoint:"/auth",registerEndPoint:"/register",validateEndPoint:"/auth",logoutEndPoint:"/logout",user:"currentUser"},u={all:"*"},i={loginSuccess:"$authLoginSuccess",loginFailed:"$authLoginFailed",logoutSuccess:"$authLogoutSuccess",sessionTimeout:"$authSessionTimeout",notAuthenticated:"$authNotAuthenticated",notAuthorized:"$authNotAuthorized"};e.$inject=["$http","$window","$rootScope"],o.$inject=["AUTH_EVENTS","$rootScope","$rsAuth"]}(angular);